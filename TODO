# TODOS
FEATURES:
  
  IN PROGRESS:
    MVP:
      Integrate new sounds:
        [ ] convert `noise.desc` from markdown to HTML on-the-fly (in other words, clean up formatting)
        [x] add code to   handle `noise.preview` optionally being an array
          [x] attempt with in-editor tools
          [x] ...
        [x] identify any missing sounds
        [ ] address missing sounds
          [ ] sst.mp3 appears to be missing
        [x] identify any orphan sounds
        [ ] address orphan sounds
          [ ] screech.mp3, remove in cleanup
          [ ] pop-fail.mp3 (added to `pop`, OK? @open-question)
          [ ] pop-old.mp3 (added to `pop`, OK? @open-question)
          [ ] uh.mp3 (added to `glottals`, OK? @open-question)
        [ ] test
        [ ] merge
        [ ] post-MVP?: group sounds in UI by category
          [ ] remap 'other' => 'noise' when appropriate
        [ ] post-MVP?: consider adding versioning to uploads (tag w/app version)
      Convert to FLAC @2:
        [ ] list out remaining TODO items
        [ ] replace WEBM encoding w/FLAC encoding (e.g., https://github.com/mmig/speech-to-flac, https://github.com/mmig/libflac.js)
          [x] refactor index.js (see: TECHNICAL HEALTH)
          [x] merge refactor branch into master branch
          [ ] rebase FLAC branch on top of ]master branch @est(30 minutes)
          [ ] merge record.js with main.js
      Merge in aegis' changes @1:
        [ ] understand where we currently stand
        [ ] what does aegis's change fix? async issues, I think ...
        [ ] run and test
          [ ] switch to branch on main fork and test
          [ ] study diff
        [ ] merge
          [ ] which branch/commit did aegis branch off of?
          [ ] if all is good, merge into own branch
      Clean up @3:
        [ ] check notes for aegis's priorities
  
  PLANNED:
    [ ] make UI mobile-friendly (currently looks just like desktop app)
    [ ] show user visual indicator that they can't change noises while recording @ux
    [x] show user (a more obvious) visual indicator that a noise has been recorded @ux
    [ ] 
    [ ] add wizard (easy sequential navigation) @ux
    [ ] simple text "pacing" timeline @ux
      [ ] change noises data structure to allow for pauses and prompts
      [ ] show user a timeline for visual prompts
      [ ] show user basic visual prompts for recording a noise
      [ ] integrate new sample sounds

  ICEBOX:
    [ ] fix status and time being disabled right after upload (they shouldn't be) @ux
    [ ] complex graphic timeline @ux
      [ ] show user an animated timeline a la rhythm games
    [ ] accessibility @a11y
      [ ] add simple keyboard shortcuts for accessibility
      [ ] replace built-in audio controls with custom ones for accessibility (e.g., https://developer.mozilla.org/en-US/docs/Learn/Accessibility/Multimedia#Creating_custom_audio_and_video_controls)
    [ ] allow user to review and submit @ux
    [ ] allow user to select mic ("zero; browsers have that ui")

  DONE:



TECHNICAL HEALTH:

  IN PROGRESS:

  PLANNED:
    [ ] refactor index.js further
      [ ] state management
        [ ] move state management into a different file
        [ ] make it so that selected noise points to one of the actual noises? and that "selected" is a property of one of them
      [ ] componentize
        [ ] move arrows out of recorder.js
      [ ] event handling
      [ ] I/O and effects
        [ ] figure out the correct data flow for recorder I/O
          [ ] fix the workarounds that abuse state
          [ ] test above
        [ ] move rest of I/O out
    [ ] fix weird remote branch
    [ ] auto-rerender on state change    
    [ ] split out CSS by "component"
    [ ] determine if we need to also refactor for list interaction
    [x] separate recorder status from clip status, then can use NEED_PERMISSIONS permission appropriately
    [ ] add development web server for automatically reloading on save of static files
    [ ] add build step so that we can use packages more easily, minify, etc
    [-] update requirements.txt

  ICEBOX:
    [ ] test scenarios
    [ ] fallback to <input>
    [ ] add debouncing
    [ ] add polyfills and fallbacks
      [ ] getUserMedia() - https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#Using_the_new_API_in_older_browsers, https://github.com/webrtc/adapter
    [ ] productionize
      [ ] minify/uglify
      [ ] bust caches!
      [ ] gzip
    [ ] replace libflac3*.strict.js with official fix for strict mode when following issue is resolved (https://github.com/mmig/libflac.js/issues/4)
    [ ] test supported desktop browsers
    [ ] smoke test and fix mobile browsers
    [ ] address TODOs
      [ ] convert noise constants to simple boolean
    [ ] fix console errors
    [ ] remove console debugging statements
    [ ] rename on<Action> arguments to be different from parameters
    [ ] optimize
      [ ] event delegation
      [ ] DOM manipulation with fragments
      [ ] virtual DOM
      [ ] DOM diffing

  DONE:

Archive:
